Anleitung für Docker

durch die Docker-compose.yml
sind die Container angelegt und beziehung zueinander gestellt.

mit folgenden Befehlen können Container gestartet / neu gestartet werden:


[root@docker phonebook]# pwd
/root/nodejs/phonebook

-> Einzelner Service (database oder node)
[root@docker phonebook]# docker-compose restart node

alle container entfernen und neu starten
[root@docker phonebook]# docker-compose down
[root@docker phonebook]# docker-compose up
[root@docker phonebook]# docker-compose up -d  --> als deamon starten

Logs eines Containers anschauen:
[root@docker phonebook]# docker logs 5c69cb945dde


um z.B. mit npm ein neues modul in einem Container zu installieren in den Container wechseln udn eine bash starten:
wenn ein volume gemountet ist, sind änderungen persistent
ulewu@docker:~$ docker exec -it 0d933921aa2c bash
( dann z.B.: npm install pdfmake --save )


------------

Info : Einen Draggable DIV erstellen:

<!-- Draggable DIV -->
<style>

#mydiv {
    position: absolute;
    top: 20px;
    left: 500px;
    z-index: 9;
    background-color: #f1f1f1;
    border: 1px solid #d3d3d3;
    text-align: center;
}

#mydivheader {
    padding: 10px;
    cursor: move;
    z-index: 10;
    background-color: #2196F3;
    color: #fff;
}

</style>

<div id="mydiv">
 <!-- Include a header DIV with the same name as the draggable DIV, followed by "header" -->
 <div id="mydivheader">Click here to move</div>
 <p>Test- Moveable</p>
 <p>DIV Frame</p>
</div>

<!-- END Draggable DIV -->


<script>
//Make the DIV element draggagle:
dragElement(document.getElementById("mydiv"));

function dragElement(elmnt) {
  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
  if (document.getElementById(elmnt.id + "header")) {
    /* if present, the header is where you move the DIV from:*/
    document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
  } else {
    /* otherwise, move the DIV from anywhere inside the DIV:*/
    elmnt.onmousedown = dragMouseDown;
  }

  function dragMouseDown(e) {
    e = e || window.event;
    e.preventDefault();
    // get the mouse cursor position at startup:
    pos3 = e.clientX;
    pos4 = e.clientY;
    document.onmouseup = closeDragElement;
    // call a function whenever the cursor moves:
    document.onmousemove = elementDrag;
  }

  function elementDrag(e) {
    e = e || window.event;
    e.preventDefault();
    // calculate the new cursor position:
    pos1 = pos3 - e.clientX;
    pos2 = pos4 - e.clientY;
    pos3 = e.clientX;
    pos4 = e.clientY;
    // set the element's new position:
    elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
    elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
  }

  function closeDragElement() {
    /* stop moving when mouse button is released:*/
    document.onmouseup = null;
    document.onmousemove = null;
  }
}
</script>
